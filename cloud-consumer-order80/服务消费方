1、远程调用方式的改变：
    基于类进行开发的消费者。使用restTemplate 进行远程服务调用。
    具有代码之间的高耦合，使用openFeign 进行改进成基于接口和注解方式进行开发。利于程序低耦合，高扩展。
2、ribbon 通过使用该功能进行服务的负载均衡。可以自定义负载均衡策略。
Ribbon 轮询规则的提换(在消费端进行配置)：这个自定义配置类不能放在@ComponentScan所扫描的当前包下以及子包下，
              否则我们自定义的这个配置类就会被所有的Ribbon客户端所共享，达不到特殊化订制的目的了。